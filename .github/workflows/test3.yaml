name: manjaro-xfce4-rootfs

on:
  workflow_dispatch:
  schedule:
    - cron: '30 2 * * 2'   # 每周二 02:30 UTC

permissions:
  contents: write          # 上传 Release 需要写权限

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      # ---------- 1. 时间戳 ----------
      - id: time
        uses: boredland/get-time-action@v2   # 2025 实测可用
        with:
          format: 'YYYYMMDD'

      # ---------- 2. 装依赖 ----------
      - name: install-deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gdisk zip systemd-container bmap-tools asciidoc libarchive-tools \
            git build-essential cmake libarchive-dev pkg-config \
            libcurl4-openssl-dev libgpgme-dev libssl-dev fakeroot dh-autoreconf \
            qemu-utils qemu-efi-aarch64 qemu-system-arm qemu-user-static
          sudo pip3 install meson ninja

      # ---------- 3. 编译官方 pacman ----------
      - name: install-pacman
        env:
          PACMAN_VERSION: 6.0.2
        run: |
          git clone --depth 1 https://gitlab.manjaro.org/packages/core/pacman.git
          pushd pacman
            wget -q https://sources.archlinux.org/other/pacman/pacman-${PACMAN_VERSION}.tar.xz
            tar -xf pacman-${PACMAN_VERSION}.tar.xz
            pushd pacman-${PACMAN_VERSION}
              meson setup build \
                --prefix=/usr --buildtype=plain \
                -Ddoc=disabled -Ddoxygen=enabled \
                -Dscriptlet-shell=/usr/bin/bash \
                -Dldconfig=/usr/bin/ldconfig
              meson compile -C build
              sudo meson install -C build
            popd
            sudo install -Dm644 pacman.conf /etc/pacman.conf
            sudo install -Dm644 makepkg.conf /etc/makepkg.conf
            sudo mkdir -p /etc/pacman.d
            curl -Lo /tmp/mirrorlist https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools/-/raw/master/profiles/defaults/arm64/mirrorlist
            sudo mv /tmp/mirrorlist /etc/pacman.d/mirrorlist
          popd

      # ---------- 4. 注册 qemu-user-static ----------
      - name: qemu-binfmt
        run: |
          sudo wget -qO /usr/lib/binfmt.d/qemu-static.conf \
            https://gitlab.manjaro.org/manjaro-arm/packages/manjaro-arm-qemu-static/-/raw/master/qemu-static.conf
          sudo systemctl restart systemd-binfmt

      # ---------- 5. 装 arch-install-scripts ----------
      - name: install-arch-install-scripts
        env:
          VERSION: 28
        run: |
          wget -qO- https://github.com/archlinux/arch-install-scripts/archive/v${VERSION}.tar.gz | tar xz
          make -C arch-install-scripts-${VERSION}
          sudo make -C arch-install-scripts-${VERSION} PREFIX=/usr install

      # ---------- 6. 生成 rootfs ----------
      - name: build-rootfs
        run: |
          set -xe
          ROOTFS=$PWD/rootfs
          sudo rm -rf "$ROOTFS"
          sudo mkdir -p "$ROOTFS"

          # 2025 年最新参数：仅 -K 即可
          sudo pacstrap -K "$ROOTFS" \
            base sudo systemd \
            xfce4 xfce4-goodies \
            xorg-server xorg-apps xorg-xinit \
            lightdm lightdm-gtk-greeter \
            gvfs util-linux \
            nano vim screen supervisor \
            pavucontrol tar xz gzip sed \
            ttf-dejavu ttf-liberation \
            ca-certificates ca-certificates-utils \
            manjaro-keyring archlinux-keyring

          # 清理无用文件
          sudo rm -f "$ROOTFS"/var/lib/pacman/sync/*.db.sig
          sudo arch-chroot "$ROOTFS" pacman -Scc --noconfirm
          sudo rm -f "$ROOTFS"/etc/machine-id
          sudo touch "$ROOTFS"/etc/machine-id

          # 打包
          sudo tar -zcpf manjaro-xfce4-${{ steps.time.outputs.time }}.tar.gz -C "$ROOTFS" .
          sudo chown $USER:$USER manjaro-xfce4-${{ steps.time.outputs.time }}.tar.gz

      # ---------- 7. 发布 Release ----------
      - name: release
        uses: softprops/action-gh-release@v0.1.15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          name: manjaro-xfce4-${{ steps.time.outputs.time }}
          draft: false
          prerelease: false
          files: manjaro-xfce4-${{ steps.time.outputs.time }}.tar.gz
