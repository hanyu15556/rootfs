name: Manjaro-ARM64-XFCE-VNC
on:
  workflow_dispatch:
  schedule:
    - cron: '30 1 * * 1'
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: 'YYYYMMDD'
      - name: install-build-dependencies
        shell: bash
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y gdisk zip systemd-container bmap-tools asciidoc libarchive-tools git build-essential cmake libarchive-dev pkg-config libcurl4-openssl-dev libgpgme-dev libssl-dev fakeroot dh-autoreconf qemu-utils qemu-efi-aarch64 qemu-system-arm qemu-user-static
          sudo pip3 install meson ninja
      - name: install-pacman
        shell: bash
        env:
          PACMAN_VERSION: 6.0.2
        run: |
          sudo git clone --depth 1 https://gitlab.manjaro.org/packages/core/pacman.git
          pushd pacman
          sudo wget -q https://sources.archlinux.org/other/pacman/pacman-${PACMAN_VERSION}.tar.xz
          sudo tar -xf pacman-${PACMAN_VERSION}.tar.xz
          pushd pacman-${PACMAN_VERSION}
          sudo meson setup build --prefix=/usr --buildtype=plain -Ddoc=disabled -Ddoxygen=enabled -Dscriptlet-shell=/usr/bin/bash -Dldconfig=/usr/bin/ldconfig
          sudo meson compile -C build
          sudo meson install -C build
          popd
          sudo install -m644 pacman.conf /etc/pacman.conf
          sudo install -m644 makepkg.conf /etc/
          sudo mkdir -p /etc/pacman.d
          sudo touch /etc/pacman.d/mirrorlist
          popd
      - name: setup-qemu-binfmt
        shell: bash
        run: |
          sudo wget -q https://gitlab.manjaro.org/manjaro-arm/packages/manjaro-arm-qemu-static/-/raw/master/qemu-static.conf -O /usr/lib/binfmt.d/qemu-static.conf
          sudo systemctl restart systemd-binfmt
      - name: install-arch-install-scripts
        shell: bash
        env:
          VERSION: 28
        run: |
          sudo wget -q https://github.com/archlinux/arch-install-scripts/archive/refs/tags/v${VERSION}.tar.gz -O arch-install-scripts.tar.gz
          sudo tar -xf arch-install-scripts.tar.gz
          sudo make -C arch-install-scripts-${VERSION}
          sudo make -C arch-install-scripts-${VERSION} check
          sudo make -C arch-install-scripts-${VERSION} PREFIX=/usr install
      - name: install-manjaro-arm-tools
        shell: bash
        run: |
          sudo git clone --depth 1 https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools.git
          install_m_a_tools() {
            pkgname=manjaro-arm-tools
            sudo install -dm755 /usr/share/$pkgname/{lib,profiles}
            sudo install -d /etc/$pkgname
            sudo install -dm755 /var/{lib,cache}/$pkgname/{pkg,img,tmp,profiles}
            sudo install -dm755 /var/cache/$pkgname/{pkg/pkg-cache,img}
            sudo install -Dm755 $pkgname/lib/* /usr/share/$pkgname/lib/
            sudo install -Dm755 $pkgname/bin/* /usr/bin/
            sudo install -Dm755 $pkgname/lib/manjaro-arm-tools.conf /etc/manjaro-arm-tools/
          }
          install_m_a_tools
          sudo sed -i -e 's|1>/dev/null||g' /usr/share/manjaro-arm-tools/lib/functions.sh
          sudo sed -i -e 's|1> /dev/null 2>&1||g' /usr/share/manjaro-arm-tools/lib/functions.sh
          sudo sed -i -e 's|2>/dev/null||g' /usr/share/manjaro-arm-tools/lib/functions.sh
      - name: build-rootfs
        shell: bash
        run: |
          sudo buildrootfs minimal
      - name: customize-rootfs
        shell: bash
        run: |
          set -e
          ROOTFS_TAR=$(find /var/cache/manjaro-arm-tools/img -name '*.tar.gz' | head -n1)
          ROOTFS_DIR=/tmp/rootfs
          sudo mkdir -p "$ROOTFS_DIR"
          sudo tar -xzf "$ROOTFS_TAR" -C "$ROOTFS_DIR"
          sudo cp /usr/bin/qemu-aarch64-static "$ROOTFS_DIR/usr/bin/"
          EXTRA_PKGS="sudo nano vim systemd ca-certificates ca-certificates-utils sed gzip tar xz util-linux fakeroot gcc clang cmake make xorg-server xorg-xinit xorg-xrandr xorg-xsetroot xf86-video-fbdev xfce4 xfce4-goodies lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings xvfb x11vnc glmark2 mesa-demos glxgears screen gvfs pavucontrol pulseaudio dbus-x11 noto-fonts noto-fonts-cjk ttf-dejavu"
          sudo systemd-nspawn -D "$ROOTFS_DIR" --bind-ro=/etc/resolv.conf -- /bin/bash -c "
            set -e
            pacman-key --init
            pacman-key --populate archlinuxarm manjaro
            pacman -Syu --noconfirm
            pacman -S --needed --noconfirm $EXTRA_PKGS
            ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
            echo 'Asia/Shanghai' > /etc/timezone
            VNC_PASS=$(tr -dc 'A-Za-z0-9' </dev/urandom | head -c 12)
            mkdir -p /etc/x11vnc
            x11vnc -storepasswd \"$VNC_PASS\" /etc/x11vnc/passwd
            chmod 600 /etc/x11vnc/passwd
            echo \"VNC_PASSWORD=$VNC_PASS\" >> /etc/environment
            systemctl enable lightdm
            systemctl enable systemd-firstboot.service
            systemd-firstboot --prompt-root-password --prompt-user --user=manjaro --force
            pacman -Scc --noconfirm
          "
          sudo rm -rf "$ROOTFS_DIR/var/cache/pacman/pkg"/*
          sudo find "$ROOTFS_DIR/etc/pacman.d/gnupg" -type s -delete 2>/dev/null || true
          sudo tar -czf "$ROOTFS_TAR" -C "$ROOTFS_DIR" .
      - name: upload-release
        uses: softprops/action-gh-release@v0.1.15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          name: ${{ steps.time.outputs.time }}
          draft: false
          prerelease: false
          files: |
            /var/cache/manjaro-arm-tools/img/*.tar.gz
