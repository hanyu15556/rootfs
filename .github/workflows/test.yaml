name: manjaro-arm64-rootfs-extra
on:
  workflow_dispatch:
  schedule:
    - cron: '30 1 * * 1'   # 每周一 01:30 UTC

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # 0. 生成日期做版本号
      - id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: 'YYYYMMDD'

      # 1. 安装构建依赖
      - name: install-build-dependencies
        shell: bash
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            gdisk zip systemd-container bmap-tools asciidoc libarchive-tools \
            git build-essential cmake libarchive-dev pkg-config libcurl4-openssl-dev \
            libgpgme-dev libssl-dev fakeroot dh-autoreconf \
            qemu-utils qemu-efi-aarch64 qemu-system-arm qemu-user-static
          sudo pip3 install meson ninja

      # 2. 安装 pacman
      - name: install-pacman
        shell: bash
        env:
          PACMAN_VERSION: 6.0.2
        run: |
          sudo git clone --depth 1 https://gitlab.manjaro.org/packages/core/pacman.git
          pushd pacman
            sudo wget -q https://sources.archlinux.org/other/pacman/pacman-${PACMAN_VERSION}.tar.xz
            sudo tar -xf pacman-${PACMAN_VERSION}.tar.xz
            pushd pacman-${PACMAN_VERSION}
              sudo meson setup build \
                --prefix=/usr --buildtype=plain \
                -Ddoc=disabled -Ddoxygen=enabled \
                -Dscriptlet-shell=/usr/bin/bash \
                -Dldconfig=/usr/bin/ldconfig
              sudo meson compile -C build
              sudo meson install -C build
            popd
            sudo install -m644 pacman.conf     /etc/pacman.conf
            sudo install -m644 makepkg.conf    /etc/
            sudo mkdir -p /etc/pacman.d
            sudo touch /etc/pacman.d/mirrorlist
          popd

      # 3. 配置 QEMU binfmt
      - name: setup-qemu-binfmt
        shell: bash
        run: |
          sudo wget -q https://gitlab.manjaro.org/manjaro-arm/packages/manjaro-arm-qemu-static/-/raw/master/qemu-static.conf \
            -O /usr/lib/binfmt.d/qemu-static.conf
          sudo systemctl restart systemd-binfmt

      # 4. 安装 arch-install-scripts
      - name: install-arch-install-scripts
        shell: bash
        env:
          VERSION: 28
        run: |
          sudo wget -q https://github.com/archlinux/arch-install-scripts/archive/refs/tags/v${VERSION}.tar.gz -O arch-install-scripts.tar.gz
          sudo tar -xf arch-install-scripts.tar.gz
          sudo make -C arch-install-scripts-${VERSION}
          sudo make -C arch-install-scripts-${VERSION} check
          sudo make -C arch-install-scripts-${VERSION} PREFIX=/usr install

      # 5. 安装 manjaro-arm-tools
      - name: install-manjaro-arm-tools
        shell: bash
        run: |
          sudo git clone --depth 1 https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools.git
          install_m_a_tools() {
            pkgname=manjaro-arm-tools
            sudo install -dm777 /usr/share/$pkgname/{lib,profiles}
            sudo install -d /etc/$pkgname/
            sudo install -dm777 /var/lib/$pkgname/{pkg,img,tmp,profiles}
            sudo install -dm777 /var/cache/$pkgname/{pkg/pkg-cache,img}
            sudo install -Dm755 $pkgname/lib/* /usr/share/$pkgname/lib/
            sudo install -Dm755 $pkgname/bin/* /usr/bin/
            sudo install -Dm755 $pkgname/lib/manjaro-arm-tools.conf /etc/manjaro-arm-tools/
          }
          install_m_a_tools
          # 去掉静默输出便于调试
          sudo sed -i -e 's|1>/dev/null||g' /usr/share/manjaro-arm-tools/lib/functions.sh
          sudo sed -i -e 's|1> /dev/null 2>&1||g' /usr/share/manjaro-arm-tools/lib/functions.sh
          sudo sed -i -e 's|2>/dev/null||g' /usr/share/manjaro-arm-tools/lib/functions.sh

      # 6. 在 profile 中追加额外软件包
      - name: patch-profile-add-packages
        shell: bash
        run: |
          PROFILE_FILE="/usr/share/manjaro-arm-tools/profiles/arm64/minimal.yaml"
          EXTRA_PKGS="
            - sudo
            - nano
            - vim
            - systemd
            - ca-certificates
            - ca-certificates-utils
            - sed
            - gzip
            - tar
            - xz
            - supervisor
            - util-linux
          "
          # 找到 packages: 行，在其后追加
          sudo sed -i "/^packages:/a\\$EXTRA_PKGS" "$PROFILE_FILE"

      # 7. 构建 rootfs
      - name: build-rootfs
        shell: bash
        run: |
          sudo buildrootfs -p minimal

      # 8. 定位最新 tar.gz 并发布
      - name: upload-release
        uses: softprops/action-gh-release@v0.1.15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          name: ${{ steps.time.outputs.time }}
          draft: false
          prerelease: false
          files: |
            /var/cache/manjaro-arm-tools/img/*.tar.gz
